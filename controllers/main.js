import Jwt from 'jsonwebtoken';

// 1. Create a JSON Web Token
// 2. Pass the token in the Headers
// 3. Verify the token before accessing the Route

const login = async (req, res) => {
  const { username, password } = req.body;

  // Check if the username and password exists
  if (!username || !password) {
    throw new Error('InvalidCredentials');
  }

  // In general we pass the id generated by db
  const id = new Date().getTime();

  // Create a signed token
  const token = Jwt.sign({ id, username }, process.env.SECRET, {
    expiresIn: '15d',
  });

  res.status(200).json({ msg: 'User Created', token });
};

const dashboard = async (req, res) => {
  const authHeaders = req.headers.authorization;

  // Check authorization headers
  if (!authHeaders || !authHeaders.startsWith('Bearer ')) {
    throw new Error('InvalidHeaders');
  }

  // Extract the token from auth header: 'Bearer xxx.yyy.zzz'
  const token = authHeaders.split(' ')[1];

  // Verify the token
  const decodedToken = Jwt.verify(token, process.env.SECRET);
  res.status(200).json({ user: decodedToken.username });
};

export { login, dashboard };
